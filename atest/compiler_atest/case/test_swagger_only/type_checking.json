{
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "host": "localhost:8888",
  "info": {
    "description": "A simple swagger spec that uses required and optional parameters",
    "title": "Parameters example spec",
    "version": "1.0"
  },
  "definitions": {
    "ExampleObject": {
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "number"
        }
      },
      "required": [
        "id"
      ]
    },
    "ExampleBody": {
      "properties": {
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "object"
        },
        "example_array": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExampleObject"
          }
        }
      },
      "required": [
        "example_array",
        "name"
      ]
    },
    "Map«string,object»": {
      "type": "object",
      "title": "Map«string,object»"
    },
    "ExampleBody2": {
      "properties": {
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "object"
        },
        "thingDataList": {
          "type": "array",
          "description": "set",
          "items": {
            "originalRef": "Map«string,object»",
            "$ref": "#/definitions/Map«string,object»"
          }
        }
      }
    },
    "ExampleBody3": {
      "type": "object",
      "properties": {
        "alarmOrigin": {
          "type": "integer",
          "format": "int32"
        },
        "cancelFlag": {
          "type": "integer",
          "format": "int32"
        },
        "conditionMap": {
          "type": "object",
          "additionalProperties": {
            "originalRef": "ConditionInfo",
            "$ref": "#/definitions/ConditionInfo"
          }
        },
        "ctrFlag": {
          "type": "integer",
          "format": "int32"
        },
        "ctrTableName": { "type": "string" },
        "ctrTableNameZh": { "type": "string" },
        "deleteFileInfo": { "type": "boolean" },
        "exportFileName": { "type": "string" },
        "exportFtpUrl": { "type": "string" },
        "exportLanguage": { "type": "string" },
        "exportNotifyPhones": { "type": "string" },
        "exportType": { "type": "string" },
        "exportUser": { "type": "string" },
        "exportUserID": { "type": "string" },
        "fieldNameArray": {
          "type": "array",
          "items": { "type": "string" }
        },
        "form": { "type": "object" },
        "queryBuilder": { "type": "string" },
        "regionL1Id": {
          "type": "integer",
          "format": "int32"
        },
        "regionL1IdArray": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "taskSql": { "type": "string" },
        "taskType": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ExampleBody3"
    },
    "ConditionInfo": {
      "type": "object",
      "properties": {
        "andConditionInfos": {
          "type": "array",
          "items": {
            "originalRef": "ConditionInfo",
            "$ref": "#/definitions/ConditionInfo"
          }
        },
        "bottomRight": {
          "originalRef": "GeoPoint",
          "$ref": "#/definitions/GeoPoint"
        },
        "endValue": { "type": "string" },
        "fieldName": { "type": "string" },
        "fieldType": {
          "type": "string",
          "enum": [ "OBJECT", "NESTED", "GEO" ]
        },
        "missingValue": { "type": "string" },
        "nestedPath": { "type": "string" },
        "not": { "type": "boolean" },
        "opType": {
          "type": "string",
          "enum": [ "eq", "like", "in", "between", "lt", "le", "gt", "ge", "time", "exists", "script", "geo", "or", "and", "reg" ]
        },
        "orConditionInfos": {
          "type": "array",
          "items": {
            "originalRef": "ConditionInfo",
            "$ref": "#/definitions/ConditionInfo"
          }
        },
        "startValue": { "type": "string" },
        "topLeft": {
          "originalRef": "GeoPoint",
          "$ref": "#/definitions/GeoPoint"
        },
        "value": { "type": "string" },
        "values": {
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "title": "ConditionInfo"
    },
    "GeoPoint": {
      "type": "object",
      "properties": {
        "fragment": { "type": "boolean" },
        "geohash": { "type": "string" },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "GeoPoint"
    },
    "MeterUnit": {
      "type": "object",
      "properties": {
        "meterId": { "type": "string" },
        "unitId": {
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "title": "MeterUnit"
    },
    "外部服务返回结果对象模型": {
      "type": "object",
      "properties": {
        "childPaths": {
          "type": "array",
          "example": [
            {
              "meterId": "31004_-1210018023",
              "unitId": [ "1" ]
            }
          ],
          "description": "查询的仪表及其子单元信息",
          "items": {
            "$ref": "#/definitions/MeterUnit",
            "originalRef": "MeterUnit"
          }
        }
      },
      "title": "外部服务返回结果对象模型"
    }
  },
  "paths": {
    "/order": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "params",
            "description": "params",
            "required": false,
            "schema": {
              "$ref": "#/definitions/外部服务返回结果对象模型",
              "originalRef": "外部服务返回结果对象模型"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/外部服务返回结果对象模型",
              "originalRef": "外部服务返回结果对象模型"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "deprecated": false
      }
    },
    "/producer/custorm": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "params",
            "description": "params",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "originalRef": "Map«string,object»",
                "$ref": "#/definitions/Map«string,object»"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "object" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "deprecated": false
      }
    },
    "/custorm": {
      "patch": {
        "operationId": "scaleDeploymentUsingPATCH",
        "parameters": [
          {
            "name": "scaleCount",
            "in": "query",
            "description": "count",
            "required": true,
            "type": "int",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "object" }
          },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "deprecated": false
      }
    },
    "/producer": {
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "ExampleBody3",
            "description": "example body 3",
            "required": true,
            "schema": {
              "originalRef": "ExampleBody3",
              "$ref": "#/definitions/ExampleBody3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "deprecated": false
      }
    }
  },
  "swagger": "2.0"
}